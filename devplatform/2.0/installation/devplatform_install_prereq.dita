<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_x54_njh_ts">
  <title>HPE Helion Development Platform Installation Prerequisites</title>
  <body>
    <section id="prerequisites"> <title>General Prerequisites</title>
     <note type="important"><ul>
        <li>
          <p>The Cinder block storage backend must be configured to use <xref
                href="http://docs.hpcloud.com/#helion/installation/configure_vsa.html" format="html"
                scope="external">VSA</xref>, <xref
                href="http://docs.hpcloud.com/#helion/installation/configure_3par.html"
                format="html" scope="external">3Par</xref>, or <xref
                href="http://docs.hpcloud.com/#helion/installation/configure_ceph.html"
                format="html" scope="external">Ceph</xref>.</p>
        </li>
        <li>
          <p>The system running the installer needs to have Python 2.7. Most modern operating
              systems include this as part of their base toolkit. This document is geared toward a
              Linux operating system, but this does not preclude the installer from running on other
              operating systems with appropriate modifications to the command-line statements.</p>
        </li>
        <li>
          <p>If you did not <xref
                href="http://docs.hpcloud.com/#helion/administration/create_hdp_servicenet.html"
                format="html" scope="external">create the Service Network </xref>immediately after
              installing HP Helion <tm tmtype="reg">OpenStack</tm>, you <b>must</b> do so now.</p>
        </li>
       <li>
         <p>For Windows and .NET support, due to licensing requirements, you must create and deploy your own Windows and SQL Server images. This requires the following:</p>
         <ul>
           <li>Windows images must be created in a MacOS or Linux environment.</li>
           <li>You must have a Windows Server 2012 Enterprise (non-evaluation) image.</li>
           <li>A volume license for Windows Server 2012 Enterprise is strongly recommended.</li>
           <li>Additional tools (VirtIO and Virtual Box) are also required. See <xref format="dita" type="local" href="../windows/windows_building_and_deploying.dita">Building and Deploying Windows DEA and SQL Server Express Images</xref>
           for more information.</li>
         </ul>
       </li>
              </ul></note>
    </section>
    <section id="preparation">
      <title>Gather Information</title>
      <p>You will need the following information:</p>
      <dl>
        <dlentry>
          <dt>Deployer</dt>
          <dd>IP address of the Deployer.</dd>
        </dlentry>
        <dlentry>
          <dt>Username </dt>
          <dd>The OpenStack username of a cloud admin that has rights to perform a service update
            for the selected service.</dd>
        </dlentry>
        <dlentry>
          <dt>Password</dt>
          <dd>The OpenStack password of a cloud admin that has rights to perform a service update
            for the selected service.</dd>
        </dlentry>
      </dl>
     </section>   
    <section><title>Set Proxy Shell Variables</title>
   <p>If your network uses a proxy, it may be necessary to set the
      <codeph>https_proxy</codeph> and <codeph>http_proxy</codeph> shell variables so that the
      installer may download required Python libraries from the <xref
        href="https://pypi.python.org/pypi" scope="external" format="html">pypi</xref> site.</p>  <ol>
        <li>To set the shell variables, enter the following commands:
          <codeblock>export https_proxy={ip address or url of https proxy} 
export http_proxy={ip address or url of http proxy} </codeblock>Example:
          <codeblock>export https_proxy=http://proxy.example.com
export http_proxy=http://proxy.example.com</codeblock></li>
        <li> If your network uses a proxy, you must define the proxy exclusion list
            (<codeph>no_proxy</codeph>)<ol>
            <li>Source the keystone RC file.<codeblock>source keystone.osrc</codeblock></li>
            <li>Get the Keystone <b>public</b> endpoint IP
              address.<codeblock>KEYSTONE_IP_PUBLIC=$(openstack endpoint list | grep keystone | grep public | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')
echo 'KEYSTONE PUBLIC IP: ' $KEYSTONE_IP_PUBLIC  </codeblock></li>
            <li>Get the Keystone <b>internal</b> endpoint IP address.
              <codeblock>KEYSTONE_IP_INTERNAL=$(openstack endpoint list | grep keystone | grep internal | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')
echo 'KEYSTONE INTERNAL IP: ' $KEYSTONE_IP_INTERNAL </codeblock></li>
              <li id="proxy">Set the IP address values for <codeph>no_proxy</codeph>. <note
                type="important">Ensure that each and every Keystone AUTH_URL IP is included in the
                no-proxy
              list.</note><codeblock>export no_proxy=localhost,127.0.0.1,$KEYSTONE_IP_PUBLIC,$KEYSTONE_IP_INTERNAL </codeblock></li>
          </ol></li>
      </ol>
    </section><section><title>Verify Connectivity</title>
      <ol id="ol_egn_mr1_tt">
        <li>Source the keystone RC file. <codeblock>source keystone.osrc</codeblock></li>
        <li>Verify access to the <codeph>pypi</codeph> site for downloading required Python scripts:<p>
            <pre>PYPI_URL=https://pypi.python.org/pypi
wget -t3 --timeout=5 -O/dev/null -q $PYPI_URL &amp;&amp; echo exists OK || echo ERROR cannot reach $PYPI_URL</pre>
          </p></li>
        <li>Verify access to the Keystone public endpoint:
          <codeblock>KEYSTONE_URL_PUBLIC=`openstack endpoint list | grep keystone | grep public | grep -Eo '(http|https)://{1}\S+'`
wget -t3 --timeout=5 -O/dev/null -q $KEYSTONE_URL_PUBLIC &amp;&amp; echo exists OK || echo ERROR cannot reach $KEYSTONE_URL_PUBLIC</codeblock></li>
        <li>Verify access to the public Sherpa
          endpoint:<pre>SHERPA_URL_PUBLIC=`openstack endpoint list | grep sherpa | grep public | grep -Eo '(http|https)://{1}\S+'`
wget -t3 --timeout=5 -O/dev/null -q $SHERPA_URL_PUBLIC &amp;&amp; echo exists OK || echo ERROR cannot reach $SHERPA_URL_PUBLIC</pre></li>
      </ol>
    </section>
    <section>
      <title>Download and Install the Virtual Environment</title>
      <note>Installing a Python package also installs any required dependencies. This may generate
        several syntax warnings inline as the install occurs. This is expected behavior, and unless
        the output of the pip install reflects a fatal error, the install is considered
        "clean".</note>
      <ol>
        <li>SSH to the Deployer. </li>
        <li>Install <codeph>virtualenv</codeph>
          <codeblock>sudo apt-get install -y virtualenv</codeblock></li>
      </ol>
    </section> 
  </body>
</topic>
